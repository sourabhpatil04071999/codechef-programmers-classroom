<!doctype html>
<html lang="en">

  <head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css" rel="stylesheet"
      integrity="sha384-giJF6kkoqNQ00vy+HMDP7azOuL0xtbfIcaT9wjKHr8RbDVddVHyTfAAsrekwKmP1" crossorigin="anonymous">
    <link rel="stylesheet" type="text/css" href="/static/css/studentDashboard.css" />

    <title>Dashboard</title>
  </head>

  <body>


    <div class="mynav">
      <input type="checkbox" id="mynav-check">
      <div class="mynav-header">
        <div class="mynav-title" id="helloUser">
          Hello
        </div>
      </div>
      <div class="mynav-btn">
        <label for="mynav-check">
          <span> </span>
          <span> </span>
          <span> </span>
        </label>
      </div>

      <div class="mynav-links">
        <a href="/studentDashboard"> Dashboard </a>
        <a href="/studentProfile"> Profile </a>
        <a onclick="{userSignOut()}"> Sign out </a>
      </div>
    </div>
    <div class="container">

      <div class="join-class">
        <p id="joinClass"></p>
        <input class="join-class-effect" type="text" placeholder="Join class" onclick="{joinClass()}" />
        <button type="button" class="btn btn-primary" id="joinClassSubmit" onclick="joinClassSubmit()">Submit</button>

      </div>
      <br><br><br><br>
      <div id="yourClasses">
        <button type="button" class="btn btn-primary" onclick="yourClasses()">Show your classes</button>
      </div>
                      <div class="row"></div>

    </div>

    <!-- Optional JavaScript; choose one of the two! -->

    <!-- Option 1: Bootstrap Bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-ygbV9kiqUc6oa4msXn9868pTtWMgiQaeYH7/t7LECLbyPA2x65Kgf80OJFdroafW" crossorigin="anonymous">
    </script>

    <!-- Option 2: Separate Popper and Bootstrap JS -->
    <!--
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js" integrity="sha384-q2kxQ16AaE6UbzuKqyBE9/u/KzioAlnx2maXQHiDX9d4/zp8Ok3f+M7DPm+Ib6IU" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/js/bootstrap.min.js" integrity="sha384-pQQkAEnwaBkjpqZ8RU1fF1AKtTcHJwFl3pblpTlHXybJjHpMYo79HY3hIi4NKxyj" crossorigin="anonymous"></script>
    -->
    <script src="https://www.gstatic.com/firebasejs/8.1.1/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/8.1.1/firebase-auth.js"></script>
    <script src="https://www.gstatic.com/firebasejs/8.1.1/firebase-firestore.js"></script>
    <script src="/static/js/firebase.js"></script>
    <script src="/static/js/studentDashboard.js"></script>



    <script>
      firebase.initializeApp(firebaseConfig);
      var userInfo = null;
      var db = firebase.firestore();

      function checkLogIn() {

        firebase.auth().onAuthStateChanged((user) => {
          if (user) {
            console.log(user);
            userInfo = user;
            console.log("User is Already LoggedIn");
            // window.location.assign('/dashboard');
            var helloUser = document.getElementById('helloUser');
            helloUser.innerHTML = "Hello " + userInfo.displayName.split(" ")[0];



            var docRef = db.collection("users").doc(user.email);
            docRef.get().then(function (doc) {
              if (doc.exists) {
                console.log("Document data:", doc.data().type);
              } else {
                // doc.data() will be undefined in this case
                console.log("No such document!");
              }
            }).catch(function (error) {
              console.log("Error getting document:", error);
            });


          } else {
            console.log("User not LoggedIn");
            window.location.assign('/auth');

          }
        })
      }

      async function joinClassSubmit() {
        var email = userInfo.email;
        var code = document.getElementsByClassName("join-class-effect")[0].value;
        console.log("ClassCode => " + code);
        var db = firebase.firestore();

        var teacherEmail;
        var index;


        var classRef = db.collection("classes").doc(code);
        await classRef.get().then(function (doc) {
          if (doc.exists) {
            console.log("Document data:", doc.data().email);
            teacherEmail = doc.data().email;


            //Added to class COllection
            db.collection("classes").doc(code).set({
                'status': 'yes'
              }, {
                merge: true
              })
              .then(function (docRef) {
                console.log("Class Joined Successfully ");
              })
              .catch(function (error) {
                console.error("Error joining Class: ", error);
              });

            //Added to Student's own class
            db.collection("users").doc(email).collection("classes").doc(code).set({
                email: email,
              }, {
                merge: true
              })
              .then(function (docRef) {
                console.log("Class Joined Successfully ");
              })
              .catch(function (error) {
                console.error("Error joining Class: ", error);
              });

          } else {
            // doc.data() will be undefined in this case
            console.log("No such class!");
          }


        }).catch(function (error) {
          console.log("Error getting class:", error);
        });

        //ADDED to Teacher Class
        var teacherClassRef = db.collection("users").doc(teacherEmail).collection("classes").doc(code);
        var doc = await teacherClassRef.get();
        if (!doc.exists) {
          console.log('No such class! ENter correct code');
        } else {
          console.log('Document data:', doc.data());

          teacherClassRef.collection(email).doc("solved").set({
              'a': 'a'
            }, {
              merge: true
            })
            .then(function (docRef) {
              console.log("Class Joined Successfully ");
              joinMsg(1);
            })
            .catch(function (error) {
              joinMsg(0)
              console.error("Error joining Class: ", error);
            });
        }

      }

      async function yourClasses() {
        var email = userInfo.email;
        var row = document.getElementsByClassName('row')[0];
        await db.collection("users").doc(email).collection("classes").get().then(function (querySnapshot) {
          querySnapshot.forEach(function (doc) {
            // doc.data() is never undefined for query doc snapshots
            console.log(doc.id, " => ", doc.data());
            row.innerHTML += 
            `            
            <div class="col">
              <div class="card">
                <div class="card-body">
                  <h5 class="card-title">${doc.id}</h5>
                  <p class="card-text" id='${doc.id}'>
                  </p>
                  <a href='studentClass/${doc.id}' class="btn btn-primary">Go to
                    Class</a>
                </div>
              </div>
            </div>
            `;
          });
        });

      }

      window.onload = function () {
        checkLogIn();
        document.getElementById("joinClassSubmit").style.display = 'none';
      }



      function userSignOut() {
        firebase.auth().signOut().then(function () {
          console.log("User Signed Out");
        }).catch(function (error) {
          console.log(error);
        });
      }
    </script>

  </body>

</html>